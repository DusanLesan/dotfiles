#!/bin/sh

. utils

setDefaultVideoPath() {
	device_id="usb-MACROSILICON_USB_Video-video-index0"
	[ ! -L /dev/v4l/by-id/$device_id ] && notify-send -u critical "Device $device_id not found" && exit 1
	video_path="/dev/v4l/by-id/$device_id"
}

optionPicker() {
	declare -A array
	video_path="/dev/v4l/by-id/$(prompt "Choose device" "$(ls /dev/v4l/by-id)")" || exit 1
	while IFS= read -r line; do
		if [[ $line =~ Interval:\ .*\(([0-9]+).**fps\) ]]; then
			array["$format:$size"]="${array["$format:$size"]}"$'\n'"${BASH_REMATCH[1]}"
		elif [[ $line =~ Size:\ .*\ ([0-9]+x[0-9]+) ]]; then
			size="${BASH_REMATCH[1]}"
			array["$format"]="${array["$format"]}"$'\n'$size
		elif [[ $line =~ \[([0-9]+)\]:\ \'([A-Z]+)\' ]]; then
			format="${BASH_REMATCH[2]}"
			formats+=($format)
		fi
	done <<< "$(v4l2-ctl --device=$video_path --list-formats-ext)"

	video_format=$(prompt "Video format:" "$(printf '%s\n' "${formats[@]}")") || exit 1
	video_size=$(prompt "Video size:" "$(printf '%s\n' "${array[$video_format]:1}")") || exit 1
	framerate=$(prompt "Video size:" "$(printf '%s\n' "${array[$video_format:$video_size]:1}")") || exit 1
	[ "$video_format" == "MJPG" ] && video_format="mjpeg" || video_format="yuyv422"
}

display() {
	[ -n "$audio" ] && ffplay -f alsa -i hw:${audio//c/$defaultAudio} -nodisp &

	ffmpeg \
		-f v4l2 \
		-framerate $framerate \
		-video_size $video_size \
		-input_format $video_format \
		-i "$video_path" \
		-vf "format=yuv420p" \
		-f xv -

	killall ffplay
}

record() {
	ffmpeg \
		-f v4l2 \
		-framerate $framerate \
		-video_size $video_size \
		-input_format $video_format \
		-i "$video_path" \
		-c:v libx264 \
		-crf 28 \
		-f matroska \
		"$file_name" \
		-map 0:v \
		-vf "format=yuv420p" \
		-f xv display
}

recordWithSound() {
	ffmpeg \
		-loglevel error \
		-f v4l2 \
		-framerate $framerate \
		-video_size $video_size \
		-input_format $video_format \
		-i "$video_path" \
		-f alsa \
		-ar 48000 \
		-itsoffset 0.2 \
		-i hw:${audio:-$defaultAudio} \
		-c:a aac \
		-b:a 96k \
		-c:v mjpeg \
		-b:v 32000k \
		-map 0:v \
		-map 1:a \
		-vf "format=yuv420p" \
		-af "aresample=async=1:min_hard_comp=0.100000:first_pts=0" \
		-ac 2 \
		-vsync 2 \
		-shortest \
		-f matroska - \
		| tee "$file_name" \
		| ffplay -i - -vf "format=yuv420p" -af "aresample=async=1" -ac 2 -autoexit
}

file_name="$(getfilename "output.mkv" "$PWD/")"
video_size=1280x720
video_format="mjpeg"
framerate=30
defaultAudio=MS2109

while getopts "rsia:v:d:f:" opt; do
	case "$opt" in
		r) mode=record ;;
		s) mode=sound ;;
		a) audio="$OPTARG" ;;
		v) video_path="$OPTARG" ;;
		d) video_size="$OPTARG" ;;
		f) framerate="$OPTARG" ;;
		i) interactive=1 ;;
	esac
done

if [ -n "$interactive" ]; then
	optionPicker
elif [ -z "$video_path" ]; then
	setDefaultVideoPath
fi

case "$mode" in
	"record") record ;;
	"sound") recordWithSound ;;
	*) display ;;
esac
