#!/bin/sh

. utils

apply() {
	IFS="\n"
	for file in "$1"; do
		if file --mime-type "$file" | grep -q 'image/'; then
			if [ "$action" = 'Strip metadata' ]; then
				exiftool -all= -overwrite_original "$file"
			elif [ "$action" = 'Print' ]; then
				notify "$1" "$(exiftool -s -s -s -Keywords -Description -Subject "$1")"
			else
				if [ "$action" = 'Keywords' ] || [ "$action" = 'Subject' ]; then
					current_keywords=$(exiftool -s -s -s -$action "$1")
					if ! echo "$current_keywords" | grep -qw "$tag"; then
						exiftool -q -overwrite_original -"$action"+="$tag" "$1"
					fi
				else
					exiftool -q -overwrite_original -"$action"="$tag" "$1"
				fi
			fi
		fi
	done
}

setImageDB() {
	local dir="$1"

	while [ "$dir" != "/" ]; do
		if [ -e "$dir/.image.db" ]; then
			database="$dir/.image.db"
			return 0
		fi
		dir=$(dirname "$dir")
	done
}

searchFiles() {
	setImageDB "$PWD"
	if [ -n "$database" ]; then
		image-tag-handler -d "$database" -s "$1"
	fi
}

if [ -z "$2" ]; then
	actions=(
		'Print'
		'Strip metadata'
		'Description'
		'Subject'
		'Keywords'
	)

	action="$(prompt 'Action:' "$(printf '%s\n' "${actions[@]}")")" || exit 0

	if [ "$action" != 'Print' ] && [ "$action" != 'Strip metadata' ]; then
		tag="$(prompt 'Tag:')" || exit 0
	fi

	apply "$1"
else
	while getopts "s:l" opt; do
		case "$opt" in
			s) search=$OPTARG ;;
			l) lf=$OPTARG ;;
		esac
	done

	if [ "$search" != '' ]; then
		echo "start searching for $search"
		searchFiles "$search"
	fi
fi
