cmd mkdir :{{
	open-drawer 'printf "Directory Name: "&& read ans && mkdir $ans' 1
}}

cmd delete ${{
	split_height=$(( $(echo "$fx" | wc -l) + 2 ))
	[ $split_height -gt $lf_height ] && split_height=$lf_height
	tmux split-window -l $split_height '
		stty -icanon -echo
		echo -n "'"$fx"'\n\nDelete files? [y/n] "
		key=$(dd bs=1 count=1 2>/dev/null)
		if [[ "$key" == "y" ]]; then
			while IFS= read -r file; do
				rm -rf "$file" || sudo -A rm -rf "$file"
			done <<< "'"$fx"'"
			lf -remote "send '$id' load"
		fi
	'
}}

cmd open-specific ${{
	mime_type=$(mimetype -b "$f")
	apps=$(gio mime "$mime_type" | sed -n '/^Registered applications:/,/^Recommended applications:/{/^\t/s/^\t//p}')

	tmux split-window -l $(( $(echo "$apps" | wc -l) + 2 )) '
		choice=$(echo "'"$apps"'" | fzf --prompt="Open with: ") || exit 1
		setsid -f gtk-launch "$choice" "'"$f"'"
	'
}}

cmd open-drawer &{{
	split_height=$2
	if [ $1 = 'rename' ]; then
		cmd="nvim -c Oil $f"
		split_height=$(( $(ls -a | wc -l) + 1 )) && [ $split_height -gt $lf_height ] && split_height=$lf_height
	elif [ $1 = 'audio' ]; then
		readarray -t files <<< "$fx"
		files="$(printf "'%s' " "${files[@]}")"
		cmd="mpv --msg-level=all=error,statusline=trace --term-status-msg='\${media-title}: \${percent-pos}%' $files"
	else
		cmd="$1"
	fi
	tmux split-window -l $split_height "$cmd && lf -remote \"send $id load\""
}}

cmd open-audio :open-drawer 'audio' 1

map md mkdir
map DD delete
map R :open-drawer 'rename'
map T open-drawer zsh 25%
map o open-specific
