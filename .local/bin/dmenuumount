#!/bin/sh

. utils

unmountdrive() {
	if [ -z "$chosen" ]; then
		drives=$(lsblk -nrpo "mountpoint,size" | awk '$1!~/\/boot|\/$/&&length($2)>1{printf "%s (%s)\n",$1,$2}')
		[ -z "$drives" ] && exit
		chosen="$(prompt 'Unmount which drive?' "$drives")" || exit 1
		chosen="$(echo "$chosen" | awk '{print $1}')"
	fi
	drive=($(lsblk -nrpo "mountpoint,name,type" | awk -v chosen="$chosen" '$1==chosen{print $2, $3}'))
	sudo -A umount "$chosen"
	[ -z "$(ls -A $chosen)" ] && rm -rf "$chosen"
	end $? "Unmounting"
	if [ "${drive[1]}" == "crypt" ]; then
		sudo -A cryptsetup close "${drive[0]}"
		end $? "Locking"
	fi
}

unmountandroid() {
	chosen="$(prompt 'Unmount which device?' "$(awk '/simple-mtpfs/ {print $2}' /etc/mtab)")" || exit 1
	[ -z "$chosen" ] && exit
	sudo -A umount -l "$chosen"
	end $? "Unmounting"
}

umountssh() {
	chosen="$(prompt 'Unmount:' "$(mount | grep "$1" | awk '{print $3}')")"
	[ -z "$chosen" ] && exit
	fusermount -u "$chosen"
	end $? "Unmounting"
}

asktype() {
	choice="$(prompt 'Unmount:' $'Drive\nAndroid\nSSH')" || exit 1
	case "$choice" in
		Drive) unmountdrive ;;
		Android) unmountandroid ;;
		SSH) umountssh "fuse.sshfs" ;;
	esac
}

end() {
	case $1 in
		0) notify "$2" "$2 successful" ;;
		*) notify "$2" "$2 failed" ;;
	esac
}

if [ -z "$1" ]; then
	asktype
else
	chosen=$(realpath "$1")
	mount | grep -q "$chosen" || exit 1
	unmountdrive
fi
