#!/bin/sh

menu="dmenu -i -l 25"
baseurl="https://1337x.wtf/"
searchEnpoint="sort-search/"
urlParams="/seeders/desc/1/"
cachedir="/tmp/notflix"
datadir="/tmp/btfs"

die() {
	notify-send "$@" -i "NONE"
	rm -rf "$cachedir"
	rm -rf "$datadir"

	exit 1
}

main() {
	[ $# -eq 0 ] && query=$(dmenu -p "Search Torrent: " <&-) || query=$1
	[ -z "$query" ] && exit 0

	# make it queryable
	query="$(printf "%s" "$query" | sed 's/[[:blank:]]/%20/g')"

	# cache result
	mkdir -p "$cachedir" || die "Failed to create cache directory"
	curl -s "$baseurl$searchEnpoint$query$urlParams" -o "$cachedir/tmp.html"

	# get search result titles (grep exit code will be non-zero if no match is found)
	grep -Po '<a href="/torrent/.*>\K.*(?=</a>)' "$cachedir/tmp.html" > "$cachedir/titles.bw" || die 'No results found. Try again'

	# get seeders and leechers count
	grep -Po '<td class="coll-2 seeds">\K[0-9]+(?=</td>)' "$cachedir/tmp.html" > "$cachedir/seeders.bw"
	grep -Po '<td class="coll-3 leeches">\K[0-9]+(?=</td>)' "$cachedir/tmp.html" > "$cachedir/leechers.bw"

	# get torrent size
	grep -Po '<td class="coll-4 size .*">\K.*(?=<span)' "$cachedir/tmp.html" > "$cachedir/size.bw"

	# get links
	grep -Po '<a href="/\Ktorrent/.*(?=/")' "$cachedir/tmp.html" > "$cachedir/links.bw"

	# make titles more readable and remove non alphanumeric characters
	sed 's/\./ /g; s/\-/ /g' "$cachedir/titles.bw" | sed 's/[^A-Za-z0-9 ]//g' |
		tr -s " " > "$cachedir/tmp" && mv "$cachedir/tmp" "$cachedir/titles.bw"

	# merge seeders and leechers results in the format [S: num_seeders, L: num_leechers]
	paste -d ' ' "$cachedir/seeders.bw" "$cachedir/leechers.bw" | awk '{ print "[S: "$1", L: "$2"]" }' > "$cachedir/seedleech.bw"

	# prefix the size of the torrent with the line number
	awk '{print NR " - ["$0"]"}' "$cachedir/size.bw" > "$cachedir/tmp" && mv "$cachedir/tmp" "$cachedir/size.bw"

	# getting the selected line number
	selected=$(paste -d ' ' "$cachedir/size.bw" "$cachedir/seedleech.bw" "$cachedir/titles.bw" |
		$menu | cut -d '-' -f 1 | tr -d ' ')
	[ -z "$selected" ] && die "No results selected. Exiting..."

	relativeurl=$(head -n "$selected" "$cachedir/links.bw" | tail -n +"$selected")
	fullurl="$baseurl$relativeurl/"

	# requesting page for magnet link
	curl -s "$fullurl" -o "$cachedir/tmp.html"
	magnet=$(grep -Po "magnet:\?xt=urn:btih:[a-zA-Z0-9]*" "$cachedir/tmp.html" | head -n 1)

	mkdir -p "$datadir" || die "Failed to create data directory"
	XDG_DATA_HOME="$datadir" btplay "$magnet" && die "Cleanup" || die "Error playing"
}

main "$@"
