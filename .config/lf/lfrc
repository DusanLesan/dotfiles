# interpreter for shell commands (needs to be POSIX compatible)

set scrolloff 10
set hidden true
set previewer ~/.config/lf/preview
set cleaner ~/.config/lf/cleaner
set ifs "\n"
set autoquit true

cmd open ${{
	case $(file --mime-type "$f" -b) in
		image/*) lf -remote "send $id openimages" ;;
		*/octet-stream) dmenumount "$f" ;;
		*/zip) lf -remote "send $id mountarchive" ;;
		text/*) $EDITOR $fx ;;
		*) for f in $fx; do setsid $OPENER $f >/dev/null 2>&1 & done ;;
	esac
}}

cmd openimages ${{
	devour nsxiv -aiop 2>/dev/null <<< "$fx" |
	(lf -remote "send $id unselect"
	while read -r file; do
		lf -remote "send $id select \"$file\""
		lf -remote "send toggle"
	done)
}}

cmd mkdir ${{
	printf "Directory Name: "
	read ans
	mkdir $ans
}}

cmd mkfile ${{
	printf "File Name: "
	read ans
	$EDITOR $ans
}}

cmd yank-path ${{
	echo "$fx" | xclip -i -selection clipboard
}}

cmd yank-image ${{
	[ $(mimetype -Mb "$f") = "image/png" ] && \
	xclip -sel c -t "image/png" "$f" || \
	convert "$f" png:- | xclip -select  clipboard -t "image/png"
}}

# define a custom 'delete' command
cmd delete ${{
	printf "$fx\n"
	printf "delete?[y/n]"
	read ans
	if [ $ans = "y" ]; then
		for x in $fx; do
			rm -rf "$x"
		done
	fi
}}

cmd draganddrop &dragon-drag-and-drop -a -x $fx

# compress current file or selected files with tar and gunzip
cmd tar ${{
	set -f
	temp=$f.tmp
	mkdir $temp
	cp -r $fx $temp
	tar czf $f.tar.gz $temp
	rm -rf $temp
}}

# compress current file or selected files with zip
cmd zip ${{
	set -f
	temp=$f.tmp
	mkdir $temp
	cp -r $fx $temp
	cd $temp
	zip -r $f.zip .
	rm -rf $temp
}}

cmd mountarchive ${{
	mntdir="$f-archivemount"
	[ ! -d "$mntdir" ] && {
		mkdir "$mntdir"
		archivemount "$f" "$mntdir"
	}
	lf -remote "send $id cd \"$mntdir\""
	lf -remote "send $id reload"
}}

cmd fzf_jump ${{
	res="$(find . -maxdepth 1 | fzf --reverse)"
	if [ -f "$res" ]; then
		cmd="select"
	elif [ -d "$res" ]; then
		cmd="cd"
	fi
	lf -remote "send $id $cmd \"$res\""
}}

# Remove some defaults
map m
map o
map d

# Basic Functions
map H top
map L bottom
map <a-f> :fzf_jump
map . set hidden!
map DD delete
map x cut
map Y yank-path
map <a-y> yank-image
map r rename
map dr &dragon-drop -a -x $fx
map u %du -sh $f
map c :clear; unselect

map mf mkfile
map md mkdir
map mu %dmenuumount "$fx"

map ae $ext $f
map at tar
map az zip
map am mountarchive

map R reload
map C clear
map U unselect
map spd set nopreview
map spe set preview
map sr1 set ratios 1
map sr2 set ratios 1:2
map sr3 set ratios 1:2:3
map sr4 set ratios 1:2:3:5

# use enter for shell commands
map <enter> shell

# dedicated keys for file opener actions
map o &xdg-open "$f"
map O $mimeopen --ask $f 2> /dev/null
map <a-o> $sh $f &

# Movement
map ~ mark-save
map ` mark-load
map gds cd ~/Documents
map gdl cd ~/Downloads
map gl cd ~/.local
map gc cd ~/.config
map gG cd  ~/git
map gpr cd ~/git/5.0_roku/pluto-tv-roku/
map gpc cd ~/git/5.0_roku/pluto-tv-roku/pluto/components/5.0_app/
map g1 cd ~/hdd_1/
