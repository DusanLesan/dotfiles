#!/bin/sh

. utils

multimon() {
	mirror=$(prompt 'Mirror displays?' $'no\nyes') || exit
	if [ "$mirror" = 'yes' ]; then
		external=$(prompt 'Optimize resolution for:' "$screens") || exit
		internal=$(echo "$screens" | grep -v "$external")

		res_external=$(xrandr --query | sed -n "/^$external/,/\+/p" | tail -n 1 | awk '{print $1}')
		res_internal=$(xrandr --query | sed -n "/^$internal/,/\+/p" | tail -n 1 | awk '{print $1}')

		res_ext_x=$(echo "$res_external" | sed 's/x.*//')
		res_ext_y=$(echo "$res_external" | sed 's/.*x//')
		res_int_x=$(echo "$res_internal" | sed 's/x.*//')
		res_int_y=$(echo "$res_internal" | sed 's/.*x//')

		scale_x=$(expr $res_ext_x / $res_int_x)
		scale_y=$(expr $res_ext_y / $res_int_y)

		xrandr --output "$external" --auto --scale 1.0x1.0 \
			--output "$internal" --auto --same-as "$external" \
			--scale "$scale_x"x"$scale_y"
	else
		primary=$(prompt 'Select primary display:' "$screens") || exit
		secondary=$(echo "$screens" | grep -v "$primary")
		direction=$(prompt "What side of $primary should $secondary be on?" $'right\nleft') || exit
		xrandr --output "$primary" --auto --scale 1.0x1.0 --output "$secondary" --"$direction"-of "$primary" --auto --scale 1.0x1.0
	fi
}

onescreen() {
	xrandr --output "$1" --auto --scale 1.0x1.0 $(echo "$allposs" | grep -v "$1" | awk '{print "--output", $1, "--off"}')
}

postrun() {
	killall dunst >/dev/null 2>&1
}

allposs=$(xrandr -q | grep 'connected')
screens=$(echo "$allposs" | awk '/ connected/ {print $1}')

[ "$(echo "$screens" | wc -l)" -lt 2 ] &&
	{ onescreen "$screens"; postrun; notify 'Only one screen detected.' 'Using it in its optimal settings...'; exit ;}

chosen=$(prompt 'Select display arangement:' "$screens"$'\nmulti-monitor') || exit
[ "$chosen" == 'multi-monitor' ] && multimon || onescreen "$chosen"

postrun
